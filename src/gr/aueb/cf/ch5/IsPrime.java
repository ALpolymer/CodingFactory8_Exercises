package gr.aueb.cf.ch5;
import java.util.Scanner;

/**
 * Η κλάση IsPrime υλοποιεί έναν αλγόριθμο για τον έλεγχο αν ένας αριθμός είναι πρώτος.
 * Ένας πρώτος αριθμός είναι ένας φυσικός αριθμός μεγαλύτερος του 1 που δεν έχει θετικούς
 * διαιρέτες εκτός από το 1 και τον εαυτό του.
 *
 * Η εφαρμογή ζητά από τον χρήστη να εισάγει έναν ακέραιο αριθμό και στη συνέχεια
 * ελέγχει και εμφανίζει αν ο αριθμός είναι πρώτος ή όχι.
 *
 * Ο αλγόριθμος χρησιμοποιεί βελτιστοποιήσεις για την αποτελεσματικότητα του ελέγχου:
 * - Ελέγχει αν ο αριθμός είναι μικρότερος ή ίσος του 1 (δεν είναι πρώτος)
 * - Ειδική περίπτωση για το 2 (είναι πρώτος)
 * - Ελέγχει αν ο αριθμός είναι ζυγός (εκτός του 2, οι ζυγοί αριθμοί δεν είναι πρώτοι)
 * - Ελέγχει τη διαιρετότητα μόνο με περιττούς αριθμούς μέχρι την τετραγωνική ρίζα του αριθμού
 *
 * @author A.POLYMEROS
 * @version 1.0
 */
public class IsPrime {
    static Scanner scanner = new Scanner(System.in);

    /**
     * Η κύρια μέθοδος της εφαρμογής. Προτρέπει τον χρήστη να εισάγει έναν ακέραιο αριθμό,
     * λαμβάνει την είσοδο και καλεί τη μέθοδο isPrime για να ελέγξει αν ο αριθμός είναι
     * πρώτος. Στη συνέχεια εμφανίζει το αποτέλεσμα.
     *
     * @param args Παράμετροι γραμμής εντολών (δεν χρησιμοποιούνται)
     */
    public static void main(String[] args) {
        int intNumber = 0;
        System.out.println("Παρακάλώ εισάγετε έναν ακέραιο αριθμό:");

        intNumber = getOneInt();

        System.out.printf("Ο αριθμός %d είναι πρώτος: %b" , intNumber , isPrime(intNumber));
    }

    /**
     * Διαβάζει και επιστρέφει έναν ακέραιο αριθμό από την είσοδο του χρήστη.
     *
     * @return Ο ακέραιος αριθμός που εισήγαγε ο χρήστης
     */
    public static int getOneInt(){
        return scanner.nextInt();
    }

    /**
     * Ελέγχει αν ένας ακέραιος αριθμός είναι πρώτος.
     * Η μέθοδος εφαρμόζει τις ακόλουθες βελτιστοποιήσεις:
     * 1. Αριθμοί μικρότεροι ή ίσοι του 1 δεν είναι πρώτοι
     * 2. Το 2 είναι ο μοναδικός ζυγός πρώτος αριθμός
     * 3. Οι υπόλοιποι ζυγοί αριθμοί δεν είναι πρώτοι
     * 4. Για τους περιττούς αριθμούς, ελέγχονται μόνο περιττοί διαιρέτες μέχρι
     *    την τετραγωνική ρίζα του αριθμού
     *
     * @param intNumber Ο ακέραιος αριθμός προς έλεγχο
     * @return true αν ο αριθμός είναι πρώτος, false διαφορετικά
     */
    public static boolean isPrime(int intNumber){
        final int MAX_DIVISOR = (int)Math.sqrt(intNumber);
        if (intNumber <= 1) return false;
        if (intNumber == 2) return true;
        if (intNumber % 2 == 0) return false;

        for (int i = 3; i <= MAX_DIVISOR; i= i+2) {
            if(intNumber%i == 0) return false;
        }

        return true;
    }
}
